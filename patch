From bf02099f039c4cfe9593359dea66a7f838c12a85 Mon Sep 17 00:00:00 2001
From: Danilo Resende <danilo.isr@gmail.com>
Date: Fri, 23 Mar 2012 11:55:05 -0300
Subject: [PATCH] working-on-components-2

---
 app/controllers/application_controller.rb          |   13 ++++-
 app/helpers/site_components_helper.rb              |    8 +---
 app/models/site_component.rb                       |   45 ++++++++++++++++++--
 config/application.rb                              |    1 +
 lib/weby/components.rb                             |   11 +++++
 lib/weby/components/gov_bar/gov_bar_component.rb   |    6 +++
 lib/weby/components/gov_bar/locales/pt-BR.yml      |    4 ++
 .../views/components/gov_bar/_form.html.erb        |    9 ++++
 .../views/components/gov_bar/_gov_bar.html.erb     |   11 +++++
 notes.txt                                          |    9 ++++
 10 files changed, 103 insertions(+), 14 deletions(-)
 create mode 100644 lib/weby/components.rb
 create mode 100644 lib/weby/components/gov_bar/gov_bar_component.rb
 create mode 100644 lib/weby/components/gov_bar/locales/pt-BR.yml
 create mode 100644 lib/weby/components/gov_bar/views/components/gov_bar/_form.html.erb
 create mode 100644 lib/weby/components/gov_bar/views/components/gov_bar/_gov_bar.html.erb
 create mode 100644 notes.txt

diff --git a/app/controllers/application_controller.rb b/app/controllers/application_controller.rb
index b66c157..e2811a1 100644
--- a/app/controllers/application_controller.rb
+++ b/app/controllers/application_controller.rb
@@ -33,8 +33,10 @@ class ApplicationController < ActionController::Base
     return true if current_user.is_admin
     unless get_roles(current_user).detect do |role|
         role.rights.detect do |right|
-          right.action.split(' ').detect do |ri| 
-            right.controller == self.class.controller_path && ri == action_name
+          right.action.split(' ').detect do |ri|
+            # devido aos scopo dos controllers devemos fazer um split e pegar a ultima parte
+            # ex: 'sites/feedbacks'.split('/').last => feedbacks
+            right.controller == self.class.controller_path.split('/').last && ri == action_name
           end
         end
       end
@@ -180,6 +182,11 @@ class ApplicationController < ActionController::Base
   # Metodo usado na ordenação de tabelas por alguma coluna
   def sort_direction
     %w[asc desc].include?(params[:direction]) ? params[:direction] : 'asc'
-  end 
+  end
+
+  def debug2file(msg)
+    File.open(Rails.root.join('tmp', 'mylogger.txt'), 'a+'){|f| f.puts msg}
+  end
+  helper_method :debug2file
 
 end
diff --git a/app/helpers/site_components_helper.rb b/app/helpers/site_components_helper.rb
index e455760..fdbea99 100644
--- a/app/helpers/site_components_helper.rb
+++ b/app/helpers/site_components_helper.rb
@@ -37,8 +37,7 @@ module SiteComponentsHelper
      'institutional_bar',
      'weby_bar',
      'news_as_home',
-     'teacher_photo', 
-     'gov_bar']
+     'teacher_photo']
   end
 
   def components_settings
@@ -49,7 +48,6 @@ module SiteComponentsHelper
       'front_news'        => ['quant'],
       'menu_side'         => ['category'],
       'news_as_home'      => ['page'],
-      'gov_bar'           => ['background'],
       'teacher_photo'     => ['image', 'height', 'width'],
       'feedback'          => ['label']
     }
@@ -86,10 +84,6 @@ module SiteComponentsHelper
         'page' => [ (cur_page ? '<input type="text" disabled="disabled" value="'+cur_page.by_locale(@current_locale).title+'"><input type="hidden" name="page" value="'+cur_page.id.to_s+'">' : '' )+ '<a onclick="select_page(); return false;">', t('select_param', :param => t('news.one')), '</a>'].join
       },
 
-      'gov_bar' => {
-        'background' => ['<select name="background">', options_for_select([["Azul","#004b82"],["Verde","#00500f"],["Cinza","#7f7f7f"],["Preto","#000000"]], cur_setting[:background]), '</select>'].join
-      },
-
       # FIXME implementar novo modelo de componentes
       'teacher_photo' => {
         'image' => [repository_search( t("page.image"), "page_image", "image", cur_image, multiple: false, file_types: 'image'),
diff --git a/app/models/site_component.rb b/app/models/site_component.rb
index af478da..db6dbbc 100644
--- a/app/models/site_component.rb
+++ b/app/models/site_component.rb
@@ -1,8 +1,45 @@
 class SiteComponent < ActiveRecord::Base
-  before_create { self.publish ||= true }
+  before_save :prepare_variables
+
   belongs_to :site
 
-  def self.by_setting(setting, value)
-    self.where("settings LIKE '%:#{setting} => \"#{value}\"%'")
+  scope :by_setting, lambda { |setting, value|
+    where("settings LIKE '%:#{setting} => \"#{value}\"%'")
+  }
+
+  protected
+  def settings_map
+    @settings_map = self.settings ? eval(self.settings) : {} if @settings_map.nil?
+    @settings_map
+  end
+
+  class << self
+    def component_name(name = nil)
+      @component_name ||= !name.nil? ? name.to_s : self.name.tableize
+    end
+
+    def register_settings(*settings)
+      settings.each do |setting|
+        class_eval <<-METHOD
+          default_scope where(:component => self.component_name)
+
+          def #{setting}=(value)
+            settings_map[:#{setting}] = value
+          end
+          
+          def #{setting}
+            settings_map[:#{setting}]
+          end
+        METHOD
+      end
+      # TODO criar um components_path lá nas configs
+      ActionController::Base.view_paths << Rails.root.join('lib', 'weby', 'components', component_name, 'views')
+    end
+  end
+
+  private
+  def prepare_variables
+    self.publish ||= true
+    self.settings = settings_map.to_s
   end
-end
\ No newline at end of file
+end
diff --git a/config/application.rb b/config/application.rb
index 5c4ff4a..37d2210 100644
--- a/config/application.rb
+++ b/config/application.rb
@@ -18,6 +18,7 @@ module Weby
     # Custom directories with classes and modules you want to be autoloadable.
     # config.autoload_paths += %W(#{config.root}/extras)
     config.autoload_paths += %W( #{config.root}/lib )
+    config.autoload_paths += Dir["#{config.root}/lib/**/*"]
 
     # Only load the plugins named here, in the order given (default is alphabetical).
     # :all can be used as a placeholder for all plugins not explicitly named.
diff --git a/lib/weby/components.rb b/lib/weby/components.rb
new file mode 100644
index 0000000..8410c84
--- /dev/null
+++ b/lib/weby/components.rb
@@ -0,0 +1,11 @@
+module Weby
+
+  module Components
+    
+    ActionView::PartialRenderer.module_eval do
+      def render_component(component, view = 'index')
+        render "components/#{component.component_name}/#{view}"
+      end
+    end
+  end
+end
diff --git a/lib/weby/components/gov_bar/gov_bar_component.rb b/lib/weby/components/gov_bar/gov_bar_component.rb
new file mode 100644
index 0000000..777b163
--- /dev/null
+++ b/lib/weby/components/gov_bar/gov_bar_component.rb
@@ -0,0 +1,6 @@
+class GovBarComponent < SiteComponent
+  component_name :gov_bar
+  register_settings :background
+
+  validates :background, :presence => true
+end
diff --git a/lib/weby/components/gov_bar/locales/pt-BR.yml b/lib/weby/components/gov_bar/locales/pt-BR.yml
new file mode 100644
index 0000000..bb56682
--- /dev/null
+++ b/lib/weby/components/gov_bar/locales/pt-BR.yml
@@ -0,0 +1,4 @@
+pt-BR:
+  components:
+    gov_bar:
+      background: "Cor de fundo"
diff --git a/lib/weby/components/gov_bar/views/components/gov_bar/_form.html.erb b/lib/weby/components/gov_bar/views/components/gov_bar/_form.html.erb
new file mode 100644
index 0000000..0354cd9
--- /dev/null
+++ b/lib/weby/components/gov_bar/views/components/gov_bar/_form.html.erb
@@ -0,0 +1,9 @@
+<p>
+  <label><%= t('components.gov_bar.background') %></label>
+  <select name="background">
+    <%= options_for_select
+      [["Azul","#004b82"],["Verde","#00500f"],["Cinza","#7f7f7f"],["Preto","#000000"]],
+      component.background
+    %>
+  </select>
+</p>
diff --git a/lib/weby/components/gov_bar/views/components/gov_bar/_gov_bar.html.erb b/lib/weby/components/gov_bar/views/components/gov_bar/_gov_bar.html.erb
new file mode 100644
index 0000000..b739fef
--- /dev/null
+++ b/lib/weby/components/gov_bar/views/components/gov_bar/_gov_bar.html.erb
@@ -0,0 +1,11 @@
+<% width = @main_width ? "#{@main_width+4}px" : "100%" %>
+
+<div class="barra_governo_container" style="background: <%= component.background %>">
+  <div class="barra_governo" style="width: <%= raw width %>;">
+    <div class="listras">
+      <div class='logo'>
+        <a href="http://www.brasil.gov.br/" target="_blank" title="Portal Brasil"></a>
+      </div>
+    </div>
+  </div>
+</div>
diff --git a/notes.txt b/notes.txt
new file mode 100644
index 0000000..d824ba7
--- /dev/null
+++ b/notes.txt
@@ -0,0 +1,9 @@
+registra componentes
+- adiciona path das views
+
+---
+criar helper "render @component [, view = 'index']"
+- renderiza index do component por padrão
+
+---
+http://www.axehomeyg.com/2009/06/10/view-path-manipulation-for-rails-with-aop/
-- 
1.7.4.1

